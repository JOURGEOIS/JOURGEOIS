user nginx;
worker_processes auto;

error_log    /var/log/nginx/error.log warn;
pid          /var/run/nginx.pid;

events {
        worker_connections 1024;
}

http {
        include /etc/nginx/mime.types;
        default_type    application/octet-stream;
        log_format      main    '$remote_addr - $remote_user [$time_local] "$request" '
                                '$status $body_bytes_sent "$http_referer" '
                                '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;
        sendfile on;    # 응답을 보낼 때 user 영역 buffer가 아닌, kernel file buffer를 사용
        keepalive_timeout 65;

        upstream docker-nginx {
                server nginx:80;
        }

        server {
                listen 80;
                listen [::]:80;

                server_name jourgeois.com www.jourgeois.com;

                location ~ /.well-known/acme-challenge {
                        allow all;
                        root /usr/share/nginx/html;
                        try_files $uri =404;
                }

                location / {
                        return 301 https://$server_name$request_uri;
                }

        }

        server {
                listen 443 ssl;
                listen [::]:443 ssl;

                server_name jourgeois.com www.jourgeois.com;

                ssl_certificate /etc/letsencrypt/live/jourgeois.com/fullchain.pem;
                ssl_certificate_key /etc/letsencrypt/live/jourgeois.com/privkey.pem;
                include /etc/letsencrypt/options-ssl-nginx.conf; # 보안 강화를 위한 옵션 추가
                ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;   # 보안 강화를 위한 옵션 추가


                location /img {
                        proxy_pass              http://springboot:8080;
                        proxy_redirect          off;

                        rewrite ^/(.*)$ /$1 break;

                        proxy_set_header        Host $host;
                        proxy_set_header        X-Real-IP $remote_addr;
                        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header        X-Forwarded-Host $server_name;
                        proxy_set_header        X-NginX-Proxy true;
                }

                location /api {
                        proxy_pass              http://springboot:8080;
                        proxy_redirect          off;

                        rewrite ^/api/(.*)$ /$1 break;

                        proxy_set_header        Host $host;
                        proxy_set_header        X-Real-IP $remote_addr;
                        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header        X-Forwarded-Host $server_name;
                        proxy_set_header        X-NginX-Proxy true;
                }


                location / {
                        proxy_pass              http://docker-nginx;
                        proxy_redirect          off;
                        proxy_set_header        Host $host;
                        proxy_set_header        X-Real-IP $remote_addr;
                        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header        X-Forwarded-Host $server_name;
                }
        }
}
